---
title: "brightness model"
format: html
editor: visual
---

## load and combine data

```{r}
library(tidyverse)
library(readxl)
library(naniar)
library(dplyr)
library(ggplot2)# Load the ape package
library(ape)
library(readxl)
library(tidyr)
library(ggpubr)
library(ade4)
library(vegan)
library(stringr)
library(brms)
library(dplyr)
library(tidyverse)
library(cmdstanr)
library(bayesplot)
library(tidybayes)
library(posterior)
```


# load csv with species names for checks

```{r}
species_names_df <- read.csv(here::here("species_names_checks.csv"))
```



# Load dataset

```{r}
df_load_raw <- read_excel(path = here::here("a_data/04april24_datalab.xlsx"), sheet = 3)

# df_load |> glimpse()


df_load_raw$nematode_count[which(df_load_raw$nematode_count == ">100")] <- "100"
df_load_raw$nematode_count <- as.numeric(df_load_raw$nematode_count)

df_load <- df_load_raw %>% 
  select(id, spp, nematode_count, island) %>% 
  rename(species = spp)

# add species code numbers

df_load <- df_load |> 
  left_join(full_df_sp_code)

df_load


knitr::kable(head(df_load))
```

load island info

```{r}
df_island <- read_excel(path = here::here("a_data/04april24_datalab.xlsx"), sheet = "island_characteristics")

# Rename the column "mean_emergence" to "island_age" in df_island
df_island <- df_island %>% rename(island_age = mean_emergence,
                                  island_area = area)

knitr::kable(head(df_island))
```

# brightness data

```{r}

df_kraemer <- read.csv(here::here("a_data/kraemer2019_brightness_scores.csv"))
df_kraemer <- df_kraemer %>% 
  select(location, spp, brightness, microhab) %>% 
  rename(id = location,
         species = spp)


# correct species names
df_kraemer_corrected <- df_kraemer %>%
  left_join(species_names_df, by = c("species" = "annotated_name"))

df_kraemer_corrected <- df_kraemer_corrected %>%
  mutate(species = ifelse(!is.na(species_name), species_name, species)) 

```




AND give them the correct species numbers

```{r}
df_kraemer_corrected <- df_kraemer_corrected |> 
  left_join(full_df_sp_code)

df_kraemer_corrected


knitr::kable(head(df_kraemer_corrected))
```



### compare species-level info for all the datasets

```{r}
sp_bright <- df_kraemer_corrected |> glimpse() |> 
  group_by(species) |> 
  summarise(bright_mean = mean(brightness),
            n_hab = length(microhab)) |> 
  ungroup()

sp_load <- df_load |> glimpse() |> 
  group_by(species, island) |> 
  summarise(load_mean = mean(nematode_count)) |> 
  ungroup()

full_df <- sp_load |> 
  full_join(sp_bright,by = join_by(species)) |> 
  full_join(df_island, by = join_by(island)) 
  

naniar::vis_miss(full_df)

```

We know where all the snails are -- there are no snails on multiple islands. However the names from Kraemer et al. don't always exactly match our biogeography data. As a result, we drop these rows with the intention of adding them back later

```{r}
full_df_nomissing_isl <- full_df |> 
  drop_na(species, island)

full_df_nomissing_isl |> 
  naniar::vis_miss()
```

This full dataset gives us a complete list of species. We can use this to make a "species lookup table". This in turn is useful for annotating the original datasets with identical species id numbers:

```{r}
full_df_sp_code <- full_df_nomissing_isl |> 
  select(species) |> 
  distinct() |> 
  mutate(species_code = seq_along(species))
```




# habitat data

### Habitat data from Kraemer 2019 database

```{r}
df_kraemer_corrected |> 
  count(species, microhab) |> 
  pivot_wider(names_from = microhab, values_from = n, values_fill = 0) |> 
  left_join(full_df_sp_code)
  

```

### habitat data from RAD sequences database

```{r}
df_rad <- read_excel(here::here("a_data/GPS RAD snails.xlsx"))
df_rad <- df_rad %>% 
  select(Sample, Taxon, 
         habitat = Microhabitat, 
         vegetation = `Vegetation Zone`) %>% glimpse()


# correct species names
df_rad_corrected <- df_rad %>%
  rename(species = Taxon) %>% 
  left_join(species_names_df, by = c("species" = "annotated_name"))

df_rad_corrected <- df_rad_corrected %>%
  mutate(species = ifelse(!is.na(species_name), species_name, species)) 



# Semi-Arboreal is considered arboreal
df_rad_relevel_hab <- df_rad_corrected %>%
  mutate(habitat = str_to_lower(habitat)) %>% 
  mutate(habitat = str_replace(habitat, "semi-arboreal", "arboreal"))

df_rad_relevel_hab |> 
  count(habitat)

## we have a SECOND source for habitat data
df_rad_hab_filtered <- df_rad_relevel_hab %>%
  filter(habitat %in% c("arboreal", "terrestrial")) |> 
  select(species, microhab = habitat)

# select columns and combine
df_hab_combo_agg <- df_kraemer_corrected |>
  select(species, microhab) |> 
  bind_rows()|> 
  count(species, microhab) |> 
  pivot_wider(values_from = n, names_from = microhab, values_fill = 0) |> 
  mutate(total_hab = terrestrial + arboreal)

df_hab_combo_agg

```

AND give them the correct species numbers

```{r}
df_hab_combo_agg <- df_hab_combo_agg |> 
  left_join(full_df_sp_code)

df_hab_combo_agg
```


```{r}
# repeat and relevel vegetation
df_rad_veg_agg <- df_rad_relevel_hab %>% 
  mutate(vegetation = str_to_lower(vegetation)) %>% 
  ## filter for only legal values -- others are typos
  filter(vegetation %in% c("humid", "arid")) |> 
  count(species, vegetation) |> 
  pivot_wider(values_from = n, names_from = vegetation, values_fill = 0) |> 
  mutate(total_veg = humid + arid)

```

## get the values to use in the analysis

AND give them the correct species numbers

```{r}
df_rad_veg_agg <- df_rad_veg_agg |> 
  left_join(full_df_sp_code)

df_rad_veg_agg
```



# Model


### The dataframes

```{r}
df_island # island ages and areas
df_load # nematode counts
df_rad_veg_agg # vegetation counts
df_hab_combo_agg # habitat counts
df_kraemer_corrected # brightness scores

df_kraemer_corrected <- df_kraemer_corrected %>%
  left_join(df_load %>% select(species_code, island), by = "species_code")

df_kraemer_corrected

```

## Intercepts-only model

```{r}

df_kraemer_corrected <- df_kraemer_corrected[!is.na(df_kraemer_corrected$species_code)]

# Calculate number of observations and species
N <- nrow(df_kraemer_corrected)             # Number of observations 
N_spp <- length(unique(df_kraemer_corrected$species_code))  # Number of species 


# Data list for Stan model
data_list <- list(
  
  N = nrow(df_kraemer_corrected),
  N_spp = length(unique(df_kraemer_corrected$species_code)),
  spp_id = df_kraemer_corrected$species_code,
  N_islands = length(unique(df_kraemer_corrected$island)),
  island_id = df_kraemer_corrected$island,
  brightness = df_kraemer_corrected$brightness

)


```

Fit the model

```{r}
# Fit the model using cmdstanr
stan_model <- cmdstan_model(
  stan_file = here::here("c_codeStan/intercept_only_bright.stan"), 
  pedantic = TRUE
)

fit <- stan_model$sample(
  data = data_list,
  seed = 123,             
  chains = 4,               
  parallel_chains = 4,    
  iter_warmup = 1000,       
  iter_sampling = 2000   
)

```

