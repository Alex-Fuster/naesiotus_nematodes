---
title: "Model load"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

```{r setup-packages}
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
library(naniar)
library(cmdstanr)
library(bayesplot)
library(tidybayes)
library(posterior)
```

## compute species code id

```{r}
species_names_df_raw <- read.csv(here::here("data/species_names_checks.csv"))

# we're dropping the species with no name in this database. 
# this indicates morphospecies which have no formal name
species_names_df <- species_names_df_raw %>% 
  rename(species = annotated_name)  %>% 
  filter(species_name != "") |> 
  mutate(species_code = as.numeric(factor(species_name)))

species_code_df <- species_names_df |> 
  select(species_name, species_code) |> 
  distinct() |> 
  arrange(species_code)

species_code_df
```

-   correct "sp. nov. Volc\xe1n Wolf 3" in the datasets

## island info

```{r}
df_island <- read_excel(path = here::here("data/19july24_datalab.xlsx"), sheet = "island_characteristics")

# Rename the column "mean_emergence" to "island_age" in df_island
# add an ID column
df_island <- df_island %>% rename(island_age = mean_emergence,
                                  island_area = area) |> 
  mutate(island_code = as.numeric(as.factor(island)))

df_island

```

## Parasite Load dataset

```{r}
df_load_raw <- read_excel(path = here::here("data/19july24_datalab.xlsx"), sheet = 3)

# df_load |> glimpse()


df_load_raw$nematode_count[which(df_load_raw$nematode_count == ">100")] <- "100"
df_load_raw$nematode_count <- as.numeric(df_load_raw$nematode_count)

df_load_rename <- df_load_raw %>% 
  select(id, spp, nematode_count, island) %>% 
  rename(species = spp)

# correct species names
df_load <- df_load_rename %>%
  left_join(species_names_df |> select(species, species_code),
            by = "species")
df_load

```

## Island + species information

Previously we merged all the data on islands into the load dataset, but in the last bit of code above we depart from this.
Here we are adding only the island code. 
Island level data will instead be added to the species data, since it is used in calculations at the species level:

HOWEVER, species-island associations are only found in the load dataset

```{r}
sp_code_island_df <- df_load |> 
  select(species, species_code, island) |> 
  distinct() |> 
  left_join(df_island)

sp_code_island_df |> 
  head() |> 
  knitr::kable()
```

## Brightness data

```{r}

df_bright_raw <- read_csv(here::here("data/kraemer2019_brightness_scores.csv"))
df_bright <- df_bright_raw %>% 
  select(location, spp, brightness, microhab) %>% 
  rename(id = location,
         species = spp) %>%
  left_join(species_names_df |> select(species, species_code), by = "species")

df_bright


```

In this dataset it seems that the MAJORITY of observations don't have a species name. 
Is that correct??

```{r}
df_bright |> count(species_code) |> 
  arrange(desc(n))
```

That's a lot of data to lose! 

```{r}
df_bright_noNA <- df_bright |> 
  drop_na(species_code)
```



```{r}
df_rad_raw <- read_excel(here::here("data/GPS RAD snails.xlsx"))
df_rad_rename <- df_rad_raw %>% 
  select(Sample, Taxon, 
         habitat = Microhabitat, 
         vegetation = `Vegetation Zone`)%>% 
  rename(species = Taxon) %>% 
  glimpse() |> 
  left_join(species_names_df |> select(species, species_code), by = "species") |> # correct species names
  mutate(habitat = str_to_lower(habitat)) %>% 
  mutate(habitat = str_replace(habitat, "semi-arboreal", "arboreal")) |> # Semi-Arboreal is considered arboreal
  filter(habitat %in% c("arboreal", "terrestrial"))
```


#### warning! 

There should be no species in this list that are not found in the master species list! 
However we are missing the following in the species list

```{r}
df_rad_rename |> 
  filter(is.na(species_code))
```


for now we are dropping them

```{r}
df_rad_rename_noNA <- df_rad_rename |> 
  drop_na(species_code)
```



```{r}
df_hab <-  bind_rows(df_bright_noNA |> 
                       select(microhab, species_code),
                     df_rad_rename_noNA |> 
                       select(microhab = habitat, species_code)
) |> # add habitat data from brightness dataset 
  count(microhab, species_code) |> 
  pivot_wider(values_from = n, names_from = microhab, values_fill = 0) |> 
  mutate(total_hab = terrestrial + arboreal)

df_hab
```

### Vegetation data

the Rad dataset is where the data on vegetation come from 

Previously we filtered for only the vegetation types spelled "humid" or "arid", but now (19 August 2024)
there seems to be no different spellings of these in the dataset. 
Were they corrected in the original spreadsheet?


```{r}

df_veg <- df_rad_rename_noNA %>% 
  select(Sample, species, 
         habitat, vegetation)%>% 
  # glimpse() |> 
  left_join(species_names_df |> 
              select(species, species_code), by = "species") |> # correct species names
  # glimpse() |> 
  mutate(vegetation = str_to_lower(vegetation)) |> 
  # filter(vegetation %in% c("humid", "arid")) |> ## filter for only legal values -- others are typos
  count(species_code, vegetation) |> 
  pivot_wider(values_from = n, names_from = vegetation, values_fill = 0) |> 
  mutate(total_veg = humid + arid)

df_veg

```

## Summary of datasets

We now have all the datasets that we need to build the model. 

#### Vegetation data

```{r}
df_veg |> head() |> knitr::kable()
```

This dataset contains `r sum(df_veg$total_veg)` observations of `r nrow(df_veg)` species.

#### Habitat data

```{r}
df_hab |> head() |> knitr::kable()
```

This dataset contains `r sum(df_hab$total_hab)` observations of `r nrow(df_hab)` species.

#### species and island data

This is the only dataset to contain one row per species with no missing species. It gives us the 

```{r}
sp_code_island_df |> 
  head() |> 
  knitr::kable()
```

#### brightness data

```{r}
df_bright_noNA |> head() |> knitr::kable()
```

# Models

Building up slowly from a simple model -- unfortunately, the only way I know how to do this kind of work.

## Model of microhabitat

```{r}
#| class-output: stan
all_spp_arbor <- cmdstan_model(here::here("stan/all_spp_arbor.stan"))

all_spp_arbor
```


```{r}
all_spp_arbor_samp <- all_spp_arbor$sample(
  data = list(
    N_spp = nrow(sp_code_island_df),
    sp_id = sp_code_island_df$species_code,
    N_habitat = nrow(df_hab),
    habitat_arboreal = df_hab$arboreal,
    total_hab = df_hab$total_hab,
    sp_index_hab = df_hab$species_code
  ),
chains = 4, parallel_chains = 4, refresh = 0
)
```

## Model of microhabitat and veg zone


```{r}
#| class-output: stan
all_spp_arbor_veg <- cmdstan_model(here::here("stan/all_spp_arbor_veg.stan"))

all_spp_arbor_veg
```


```{r}
all_spp_arbor_veg_samp <- all_spp_arbor_veg$sample(
  data = list(
    N_spp = nrow(sp_code_island_df),
    sp_id = sp_code_island_df$species_code,
    # microhabitat
    N_habitat = nrow(df_hab),
    habitat_arboreal = df_hab$arboreal,
    total_hab = df_hab$total_hab,
    sp_index_hab = df_hab$species_code,
    # veg zone
    N_veg = nrow(df_veg),
    veg_arid = df_veg$arid,
    total_veg = df_veg$total_veg,
    sp_index_veg = df_veg$species_code
  ),
  chains = 4, parallel_chains = 4, refresh = 0
)
```

### Quick parameter visualization

The second model uses both arid and arboreal data. I want to extract those species-specific probabilities and examine them.

```{r}
#| fig-cap: po
all_spp_arbor_veg_samp |> 
  tidybayes::gather_rvars(arid_prob[sp], arboreal_prob[sp]) |> 
  ggplot(aes(x = sp, ydist = .value)) + 
  stat_pointinterval() + 
  facet_wrap(~.variable)
```

```{r}
all_spp_arbor_veg_samp |> 
  tidybayes::spread_rvars(arid_prob[sp], arboreal_prob[sp]) |> 
  mutate_all(.funs = median) |> 
  ggplot(aes(x = arid_prob, y = arboreal_prob)) + geom_point()
```

A few things to note:

* species which are undersampled get probabilities equal to the prior. This is because the model has no phylogenetic structure and no correlation structure either
* species which lack data for one of these two variables usually lack it for the other as well
* most species are 100% or 0% on these two variables, with relatively little in between.

## Model of Brightness, microhab, veg zone

```{r}
#| class-output: stan
all_spp_arbor_veg_bright <- cmdstan_model(here::here("stan/all_spp_arbor_veg_bright.stan"),
                                          pedantic = TRUE)

all_spp_arbor_veg_bright
```


```{r}
all_spp_arbor_veg_bright_samp <- all_spp_arbor_veg_bright$sample(
  data = list(
    N_spp = nrow(sp_code_island_df),
    N_island = max(sp_code_island_df$island_code),
    sp_id = sp_code_island_df$species_code,
    island_area = sp_code_island_df$island_area,
    island_age = sp_code_island_df$island_age,
    island_index_spp = sp_code_island_df$island_code,
    # microhabitat
    N_habitat = nrow(df_hab),
    habitat_arboreal = df_hab$arboreal,
    total_hab = df_hab$total_hab,
    sp_index_hab = df_hab$species_code,
    # veg zone
    N_veg = nrow(df_veg),
    veg_arid = df_veg$arid,
    total_veg = df_veg$total_veg,
    sp_index_veg = df_veg$species_code,
    # brightness data
    N_bright = nrow(df_bright_noNA), 
    brightness_obs = df_bright_noNA$brightness,
    sp_index_bright = df_bright_noNA$species_code
  ),
  chains = 4, parallel_chains = 4, refresh = 0
)
```

let's look now at species brightness predictions from this model

```{r}
bright_rvars <- all_spp_arbor_veg_bright_samp |> 
  tidybayes::gather_rvars(true_ln_bright[species_code]) |> 
  mutate(brightness = exp(.value),
         species_code = forcats::fct_reorder(as.character(species_code), .value))

post_bright <- bright_rvars |> 
  ggplot(aes(x = species_code, ydist = brightness)) + 
  stat_pointinterval() + 
  scale_y_log10()

post_bright + 
  geom_point(aes(x = species_code_f, y = brightness), inherit.aes = FALSE, 
             data = df_bright_noNA |> 
               mutate(species_code_f = ordered(species_code, levels = levels(bright_rvars$species_code))), 
             colour = "orange",
             size = .5, alpha = .5,
             position = position_jitter(width = .3))

```

